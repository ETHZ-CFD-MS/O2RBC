/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.2.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     hbPOGraphFoam;

startFrom       latestTime;

startTime       5.1;

stopAt          endTime;

endTime         10;

deltaT          1e-3;

writeControl    runTime;

writeInterval   1e-3;

purgeWrite      20;

writeFormat     binary;

writePrecision  8;

writeCompression compressed;

timeFormat      general;

timePrecision   6;

libs
(
    "libfiniteVolume.so"
    "libgraph.so"
    "libsimpleSwakFunctionObjects.so"
);

DebugSwitches
{
    vascularGraphRegions   1;
    circularTubeGraph      0;
    graphVelocityEngine    1;
    RBCCollection          1;
    regionAddRemoveFvMesh  0;
    RBCPathMover           1;
    meshToMeshMethod       0;
    meshToMeshMoving       0;
} 


functions
{
    #includeFunc    singleGraph.y_axis

    HbProbes
    {
        type        RBCProbe;
        functionObjectLibs  ("libmyFunctionObjects.so");
        graphName   graphDict;
        field       Hb;
        sampleGraphCoords
        ( 
            (0  2e-6) 
            (3 26e-6) 
            (4 26e-6)
            (5 38e-6) 
        );
    }

    sampleRBCHb
    {
        type        sampleRBCField;
        functionObjectLibs  ("libmyFunctionObjects.so");
        graphName   graphDict;
        field       Hb;
    }

    steadyStateFields
    {
        type            fieldAverage;
        functionObjectLibs ("libfieldFunctionObjects.so");
        enabled         true;
        writeControl    writeTime;
        timeStart       6.0;

        fields
        (
            PO2
            {
                mean        on;
                prime2Mean  off;
                base        time;
            }

            Hb_euler
            {
                mean        on;
                prime2Mean  off;
                base        time;
            }

            in_RBC_euler
            {
                mean        on;
                prime2Mean  off;
                base        time;
            }
        );
    }

    minMax
    {
        type            fieldMinMax;
        functionObjectLibs ("libfieldFunctionObjects.so");
        enabled         true;
        log             true;
        write           true;

        fields
        (
            PO2
            Hb_euler
        );
    }

    probesUpstream
    {
        type            probes;
        functionObjectLibs ("libsampling.so");
        enabled         true;
        outputControl   timeStep;
        outputInterval  1;

        probeLocations
        (
            (19.5e-6 38.7e-6 0)  // domain top
            (19.5e-6 29.7e-6 0)  // 
            (19.5e-6 19.7e-6 0)  // top branch
            (19.5e-6  9.7e-6 0)  // 
            (19.5e-6  0e-6   0)  // domain center
            (19.5e-6 -9.7e-6 0)  // 
            (19.5e-6 19.7e-6 0)  // bottom branch
            (19.5e-6 29.7e-6 0)  // 
            (19.5e-6 38.7e-6 0)  // domain bottom
        );

        fields
        (
            PO2
        );
    };

    probesMidstream
    {
        type probes;
        functionObjectLibs ("libsampling.so");
        enabled         true;
        outputControl   timeStep;
        outputInterval  1;

        probeLocations
        (
            (74.5e-6  38.7e-6 0)  // domain top
            (74.5e-6  29.7e-6 0)  // 
            (74.5e-6  19.7e-6 0)  // top branch
            (74.5e-6   9.7e-6 0)  // 
            (74.5e-6   0e-6   0)  // domain center
            (74.5e-6  -9.7e-6 0)  // 
            (74.5e-6 -19.7e-6 0)  // bottom branch
            (74.77e-6 -29.77e-6 0.22e-6)  // 
            (74.5e-6 -38.7e-6 0)  // domain bottom
        );

        fields
        (
            PO2
        );
    };

    probesDownstream
    {
        type probes;
        functionObjectLibs ("libsampling.so");
        enabled         true;
        outputControl   timeStep;
        outputInterval  1;

        probeLocations
        (
            (129.5e-6 38.7e-6 0)  // domain top
            (129.5e-6 29.7e-6 0)  // 
            (129.5e-6 19.7e-6 0)  // top branch
            (129.5e-6  9.7e-6 0)  // 
            (129.5e-6  0e-6   0)  // domain center
            (129.5e-6 -9.7e-6 0)  // 
            (129.5e-6 19.7e-6 0)  // bottom branch
            (129.5e-6 29.7e-6 0)  // 
            (129.5e-6 38.7e-6 0)  // domain bottom
        );

        fields
        (
            PO2
        );
    };

    volumeAverages
    {
        type                volumeAverage;
        verbose             true;
        fields
        (
            PO2
        );
        outputControlMode   timeStep;
        outputInterval      1;
        writeStartTime      no;

        ignore_unimplemented_simpleFunctionObject::updateMesh true;
        ignore_unimplemented_simpleFunctionObject::movePoints true;
    }
}


// ************************************************************************* //

